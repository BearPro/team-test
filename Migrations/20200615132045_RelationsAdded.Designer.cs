// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using team_test.Services;

namespace team_test.Migrations
{
    [DbContext(typeof(QuestionContext))]
    [Migration("20200615132045_RelationsAdded")]
    partial class RelationsAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("team_test.Models.Answer", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsRight")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("QuestionGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("Text")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Guid");

                    b.HasIndex("QuestionGuid");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("team_test.Models.Question", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("QuestionType")
                        .HasColumnType("int");

                    b.Property<Guid>("TestGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("Text")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Guid");

                    b.HasIndex("TestGuid");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("team_test.Models.Test", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Guid");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("team_test.Models.Answer", b =>
                {
                    b.HasOne("team_test.Models.Question", null)
                        .WithMany("Answers")
                        .HasForeignKey("QuestionGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("team_test.Models.Question", b =>
                {
                    b.HasOne("team_test.Models.Test", null)
                        .WithMany("Questions")
                        .HasForeignKey("TestGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
